How to get list of available indexes
The most efficient way to get accurate results is probably:

| eventcount summarize=false index=* | dedup index | fields index

If you want to include internal indexes, you can use:

| eventcount summarize=false index=* index=_* | dedup index | fields index

btool usage for troubleshooting and finding configuration btool link
Syntax - conf_file_prefix can be server|transforms|distsearch| etc

./splunk cmd btool <conf_file_prefix> list [--debug] 

Example

./splunk cmd btool server list

Adding a debug option will show from which config file the options are generated.

./splunk cmd btool server list --debug 

To get a list of stanza only in server.conf

./splunk cmd btool server list --debug | grep '\['

Find list of forwarders forwarding to splunk cluster
index=_internal source=*metrics.log group=tcpin_connections 
| where isnotnull(fwdType)
| eval sourceHost=if(isnull(hostname), sourceHost,hostname) 
| dedup sourceHost
| eval connectionType =case(fwdType=="uf","Universal", fwdType=="lwf", "Lightweight",
fwdType=="full","Heavy")
| rename sourceIp as "Source IP", sourceHost as "Source Host",
connectionType as "Forwarder Type"
| table "Source IP" "Source Host" "Forwarder Type"
Find information about indexes in splunk like rentention period, sizeof index , index location
Find index and index size total
| rest /services/data/indexes | where disabled = 0 | search NOT title = "_*" | stats sum(currentDBSizeMB) as size_MB by title |sort - size_MB
Find index and index size list per indexer
| rest /services/data/indexes | where disabled = 0 | search NOT title = "_*" | stats values(currentDBSizeMB) as size_MB by title | sort - size_MB
Note: you can remove | search NOT title = "_*"  if internal indexes size also needed.

Find index rentention period, sizeof index , index location etc
| rest /services/data/indexes | where disabled = 0 | search NOT title = "_*" | eval currentDBSizeGB = round( currentDBSizeMB / 1024) | where currentDBSizeGB > 0 | table splunk_server title summaryHomePath_expanded minTime maxTime currentDBSizeGB totalEventCount frozenTimePeriodInSecs coldToFrozenDir maxTotalDataSizeMB | rename minTime AS earliest maxTime AS latest summaryHomePath_expanded AS index_path currentDBSizeGB AS index_size totalEventCount AS event_cnt frozenTimePeriodInSecs AS index_retention coldToFrozenDir AS index_path_frozen maxTotalDataSizeMB AS index_size_max title AS index
Find retention period
| rest /services/data/indexes | table  title frozenTimePeriodInSecs currentDBSizeMB
Splunk CLI searches CLI search link
Example

./splunk search '<searchstring>' -preview true -auth admin:<passwd>

Check searchhead and indexer status
./splunk show cluster-bundle-status
./splunk list shcluster-member-info -uri http://<SH_server>:8089 -auth <id>:<passwd>
check certificate information and expire etc and Generate the certificate
openssl x509 -in server.pem -noout -text 
Generate the cert
bin/splunk createssl server-cert -d etc/auth/ -n server

check cert hash
echo '' | openssl s_client -connect <ip>:8089  2>/dev/null | openssl x509 -noout -text |grep 'Signature Algorithm'
echo '' | openssl s_client -connect 10.15.125.155:8089  -tls1

Find the daily ingested
From search head using indexers query
index=_internal group=thruput name=index_thruput | timechart span=1d sum(eval(kb/1024/1024/1024)) AS daily_TB

ingestion per index - Run this for short time only as it take a lot of time.
``` index=* | eval size=len(_raw) | eval gbsize=(size/1024/1024/1024) | timechart span=1h sum(gbsize) by index ````

From search head using licence data
| rest splunk_server=<server_name> /services/licenser/pools | rename title AS Pool | search [rest splunk_server=<server_name> /services/licenser/groups | search is_active=1 | eval stack_id=stack_ids | fields stack_id] | eval quota=if(isnull(effective_quota),quota,effective_quota) | eval "Used"=round(used_bytes/1024/1024/1024, 3) | search Used="*" | eval "Quota"=round(quota/1024/1024/1024, 3) | fields Pool "Used" "Quota" The above query can be seen from splunk DMC - performance

Upgrade or restart of splunk
Stop sequence
Cluster Master node
Deployment Manager
Search head cluster
Search Peer
Licence master
- Upgrade or do file changes
Start sequence
Licence Master
Cluster Master node and put it in maintenance mode
Start search peer
Remove maintenance mode on cluster master
Start search head
Start Deployment Manager
| rex field=apiStartTime "'(?<start_time>[^']+)'" 
| rex field=apiEndTime "'(?<end_time>[^']+)'" 
| eval search_id = trim(if(isnull(search_id), id, search_id), "'") 
| eval run_time_min=round(total_run_time/60,2) 
| eval range=if(start_time=="ZERO_TIME","All Time", tostring(strptime(end_time, "%a %b %d %H:%M:%S %Y") - strptime(start_time, "%a %b %d %H:%M:%S %Y"),"duration")) 
| stats earliest(_time) AS "Start Time" latest(_time) AS "End Time" values(start_time) AS "Search Earliest" values(end_time) AS "Search Latest" count values(range) AS range values(search) AS Search values(user) AS User max(run_time_min) AS "Run Time (Min)" by search_id 
| convert ctime(*Time) 
| where count>1 
| rename search_id AS SID range AS "Search Range" 
| table "Start Time" "End Time"  "Run Time (Min)" "Search Range" "Search Earliest" "Search Latest" 
| sort 0 - "Run Time (Min)"

Zerologon
index="your index name here" (sourcetype="<windows_sourcetype_security>" OR source="windows_source_security") EventCode="4742" OR EventCode="4624" AND (src_user="*anonymous*" OR member_id="*S-1-0*")
| eval local_system=mvindex(upper(split(user,"$")),0)
| search host=local_system
| table _time EventCode dest host ComputerName src_user Account_Name local_system user Security_ID member_id src_nt_domain dest_nt_domain

Username guessing brute force attack
index="your index name here" sourcetype=windows EventCode=4625 OR EventCode=4624 
 | bin _time span=5m as minute 
 | rex "Security ID:\s*\w*\s*\w*\s*Account Name:\s*(?<username>.*)\s*Account Domain:" 
 | stats count(Keywords) as Attempts,
 count(eval(match(Keywords,"Audit Failure"))) as Failed,
 count(eval(match(Keywords,"Audit Success"))) as Success by minute username
 | where Failed>=4
 | stats dc(username) as Total by minute 
 | where Total>5

Successful file access (must have object access auditing enabled)
index="your index name here" sourcetype=WinEventLog (Relative_Target_Name!="\\""" Relative_Target_Name!="*.ini") user!="*$" | bucket span=1d _time | stats count by Relative_Target_Name, user, _time, status | rename _time as Day | convert ctime(Day)

Successful Logons
index="your index name here" source="WinEventLog:security" EventCode=4624 Logon_Type IN (2,7,10,11) NOT user IN ("DWM-*", "UMFD-*")
| eval Workstation_Name=lower(Workstation_Name)
| eval host=lower(host)
| eval hammer=_time 
| bucket span=12h hammer 
| stats values(Logon_Type) as "Logon Type" count sparkline by user host, hammer, Workstation_Name
| rename hammer as "12 hour blocks" host as "Target Host" Workstation_Name as "Source Host"
| convert ctime("12 hour blocks")
| sort - "12 hour blocks"

Failed Logons
index="your index name here" source="WinEventLog:security" EventCode=4625
| eval Workstation_Name=lower(Workstation_Name)
| eval host=lower(host) 
| eval hammer=_time 
| bucket span=5m hammer 
| stats count sparkline by user host, hammer, Workstation_Name
| rename hammer as "5 minute blocks" host as "Target Host" Workstation_Name as "Source Host"
| convert ctime("5 minute blocks")

User Logon, Logoff, and Duration
index="your index name here" source="wineventlog:security" action=success Logon_Type=2 (EventCode=4624 OR EventCode=4634 OR EventCode=4779 OR EventCode=4800 OR EventCode=4801 OR EventCode=4802 OR EventCode=4803 OR EventCode=4804 ) user!="anonymous logon" user!="DWM-*" user!="UMFD-*" user!=SYSTEM user!=*$ (Logon_Type=2 OR Logon_Type=7 OR Logon_Type=10)
| convert timeformat="%a %B %d %Y" ctime(_time) AS Date 
| streamstats earliest(_time) AS login, latest(_time) AS logout by Date, host
| eval session_duration=logout-login 
| eval h=floor(session_duration/3600) 
| eval m=floor((session_duration-(h*3600))/60) 
| eval SessionDuration=h."h ".m."m " 
| convert timeformat=" %m/%d/%y - %I:%M %P" ctime(login) AS login 
| convert timeformat=" %m/%d/%y - %I:%M %P" ctime(logout) AS logout 
| stats count AS auth_event_count, earliest(login) as login, max(SessionDuration) AS sesion_duration, latest(logout) as logout, values(Logon_Type) AS logon_types by Date, host, user

Timechart of the Status of a Locked Out Account
index="your index name here" sourcetype="WinEventLog:Security" EventCode=4625 AND Status=0xC0000234 
| timechart count by user 
| sort -count

AD Password Change Attempts
index="your index name here" source="WinEventLog:Security" "EventCode=4723" src_user!="*$" src_user!="_svc_*" 
| eval daynumber=strftime(_time,"%Y-%m-%d") 
| chart count by daynumber, status 
| eval daynumber = mvindex(split(daynumber,"-"),2)

PTH Detection
index="your index name here" ( EventCode=4624 Logon_Type=3 ) OR ( EventCode=4625 Logon_Type=3 ) Authentication_Package="NTLM" NOT Account_Domain=YOURDOMAIN NOT Account_Name="ANONYMOUS LOGON"

Find Passwords Entered As Usernames
index="your index name here" source=WinEventLog:Security TaskCategory=Logon Keywords="Audit Failure" 
| eval password=if(match(User_Name, "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[\W])(?=.{10,})"), "Yes", "No") 
| stats count by password User_Name 
| search password=Yes

Failed Attempt to Login To A Disabled Account
index="your index name here" source="WinEventLog:security" EventCode=4625 (Sub_Status="0xc0000072" OR Sub_Status="0xC0000072") Security_ID!="NULL SID" Account_Name!="*$" 
| eval Date=strftime(_time, "%Y/%m/%d")
| rex "Which\sLogon\sFailed:\s+\S+\s\S+\s+\S+\s+Account\sName:\s+(?<facct>\S+)" 
| eval Date=strftime(_time, "%Y/%m/%d") 
| stats count by Date, facct, host, Keywords 
| rename facct as "Target Account" host as "Host" Keywords as "Status" count as "Count"

See when Windows Audit Logs are Cleared
index="your index name here" source=WinEventLog:security (EventCode=1102 OR EventCode=517) 
| eval Date=strftime(_time, "%Y/%m/%d") 
| stats count by Client_User_Name, host, index, Date 
| sort - Date 
| rename Client_User_Name as "Account Name"

Failed RDP Attempt
index="your index name here" source=WinEventLog:Security sourcetype=WinEventLog:security Logon_Type=10 EventCode=4625 
| eval Date=strftime(_time, "%Y/%m/%d") 
| rex "Failed:\s+.*\s+Account\sName:\s+(?<TargetAccount>\S+)\s" 
| stats count by Date, TargetAccount, Failure_Reason, host 
| sort - Date

Disabled Account Re-enabled
index="your index name here" sourcetype=WinEventLog:Security (EventCode=4722) 
| eval Date=strftime(_time, "%Y/%m/%d") 
|rex "ID:\s+\w+\\\(?<sourceaccount>\S+)\s+" 
| rex "Account:\s+Security\sID:\s+\w+\\\(?<targetaccount>\S+)\s+" 
| stats count by Date, sourceaccount, targetaccount, Keywords, host 
| rename sourceaccount as "Source Account" 
| rename targetaccount as "Target Account" 
| sort - Date

Account Deleted within 24 hours of Creation
index="your index name here" sourcetype=WinEventLog:Security (EventCode=4726 OR EventCode=4720) 
| eval Date=strftime(_time, "%Y/%m/%d") 
| rex "Subject:\s+\w+\s\S+\s+\S+\s+\w+\s\w+:\s+(?<SourceAccount>\S+)" 
| rex "Target\s\w+:\s+\w+\s\w+:\s+\S+\s+\w+\s\w+:\s+(?<DeletedAccount>\S+)" 
| rex "New\s\w+:\s+\w+\s\w+:\s+\S+\s+\w+\s\w+:\s+(?<NewAccount>\S+)" 
| eval SuspectAccount=coalesce(DeletedAccount,NewAccount) 
| transaction SuspectAccount startswith="EventCode=4720" endswith="EventCode=4726" 
| eval duration=round(((duration/60)/60)/24, 2) 
| eval Age=case(duration<=1, "Critical", duration>1 AND duration<=7, "Warning", duration>7, "Normal")
| table Date, index, host, SourceAccount, SuspectAccount, duration, Age 
| rename duration as "Days Account was Active" 
| sort + "Days Account was Active"

File Deletion Attempts
index="your index name here" sourcetype="WinEventLog:Security" EventCode=564 
| eval Date=strftime(_time, "%Y/%m/%d") 
| stats count by Date, Image_File_Name, Type, host 
| sort - Date

New Service Installation on Windows
index="your index name here" sourcetype=WinEventLog:Security (EventCode=4697 OR EventCode=601) 
| eval Date=strftime(_time, "%Y/%m/%d") 
| eval Status=coalesce(Keywords,Type) 
| stats count by Date, Service_Name, Service_File_Name, Service_Account, host, Status

Changes to Windows User Group by Account
index="your index name here" sourcetype=WinEventLog:Security (EventCode=4728 OR EventCode=4732 OR EventCode=4746 OR EventCode=4751 OR EventCode=4756 OR EventCode=4161 OR EventCode=4185) 
| eval Date=strftime(_time, "%Y/%m/%d") 
| rex "Member:\s+\w+\s\w+:.*\\\(?<TargetAccount>.*)" 
| rex "Account\sName:\s+(?<SourceAccount>.*)" 
| stats count by Date, TargetAccount, SourceAccount, Group_Name, host, Keywords 
| sort - Date 
| rename SourceAccount as "Administrator Account" 
| rename TargetAccount as "Target Account"

Failed Authentication to Non-Existing Account
index="your index name here" source="WinEventLog:security" sourcetype="WinEventLog:Security" EventCode=4625 Sub_Status=0xC0000064 
| eval Date=strftime(_time, "%Y/%m/%d") 
| rex "Which\sLogon\sFailed:\s+Security\sID:\s+\S.*\s+\w+\s\w+\S\s.(?<uacct>\S.*)" 
| stats count by Date, uacct, host 
| rename count as "Attempts" 
| sort - Attempts

Time Between Account Creation and Deletion
index="your index name here" sourcetype=WinEventLog:Security (EventCode=4726 OR EventCode=4720) 
| eval Date=strftime(_time, "%Y/%m/%d") 
| rex "Subject:\s+\w+\s\S+\s+\S+\s+\w+\s\w+:\s+(?<SourceAccount>\S+)" 
| rex "Target\s\w+:\s+\w+\s\w+:\s+\S+\s+\w+\s\w+:\s+(?<DeletedAccount>\S+)" 
| rex "New\s\w+:\s+\w+\s\w+:\s+\S+\s+\w+\s\w+:\s+(?<NewAccount>\S+)" 
| eval SuspectAccount=coalesce(DeletedAccount,NewAccount) 
| transaction SuspectAccount startswith="EventCode=4720" endswith="EventCode=4726" |eval duration=round(duration/60, 2) 
| eval Age=case(duration<=240, "Critical", duration>240 AND duration<=1440, "Warning", duration>1440, "Normal")
| table Date, index, host, SourceAccount, SuspectAccount, duration, Age 
| rename duration as "Minutes Account was Active" 
| rename index as "SSP or Index" 
| sort + "Minutes Account was Active"

Weekend User Activity
index="your index name here" sourcetype="WinEventLog:Security" (date_wday=saturday OR date_wday=sunday) 
| stats count by Account_Name, date_wday

Time Between Rights Granted and Revoked
index="your index name here" sourcetype=WinEventLog:Security (EventCode=4717 OR EventCode=4718) 
| rex "Access\sGranted:\s+Access\sRight:\s+(?\w+)"
| rex "Access\sRemoved:\s+Access\sRight:\s+(?\w+)"
| eval Rights=coalesce(RightGranted,RightRemoved) 
| eval status=case(EventCode=4717, "New Rights Granted by:", EventCode=4718, "Rights Removed by:")
| transaction Rights user startswith="Granted" endswith="Removed" 
| where duration > 0
| eval duration = duration/60 
| eval n=round(duration,2) 
| eval Date=strftime(_time, "%Y/%m/%d") 
| table Date, host, status, Security_ID, user, Rights, n 
| rename Security_ID as "Source Account" 
| rename user as "Target Account" 
| rename n as "Minutes between Rights Granted Then Removed" 
| sort - date

Console Lock Duration
index="your index name here" sourcetype=WinEventLog:Security (EventCode=4800 OR EventCode=4801) 
| eval Date=strftime(_time, "%Y/%m/%d") 
| transaction host Account_Name startswith=EventCode=4800 endswith=EventCode=4801 
| eval duration = duration/60 
| eval duration=round(duration,2)
| table host, Account_Name, duration, Date 
| rename duration as "Console Lock Duration in Minutes" 
| sort - date

Privilege Escalation Detection
index="your index name here" sourcetype="WinEventLog:Security" (EventCode=576 OR EventCode=4672 OR EventCode=577 OR EventCode=4673 OR EventCode=578 OR EventCode=4674) 
| stats count by user

Number of Accounts Created in Windows Environment
index="your index name here" sourcetype=WinEventLog:Security (EventCode=624 OR EventCode=4720) 
| eval NewAccount=case(EventCode=624, "New Account Created", EventCode=4720, "New Account Created") 
| stats count(NewAccount) as creation 
| gauge creation 1 5 15 25
